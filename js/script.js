// –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM
const buttonOverlay = document.getElementById("button-overlay-area");
const image = document.querySelector('#game-area img');
const overlayArea = document.getElementById('overlay-area');
const wideButton = document.querySelector('.wide-button');
const incrementDisplay = document.getElementById('increment-display');
const morseBar = document.getElementById('morse-bar');
const characterDisplay = document.querySelector('.character');
const buttonPanel = document.querySelector('.button-panel');
const buttonPanelTop = document.querySelector('.button-panel-top');

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –∑–Ω–∞—á–µ–Ω–∏—è
let fillPercentage; // –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∏—Ä–æ–∫–æ–π –∫–Ω–æ–ø–∫–∏
let isButtonOverlayActive = false; // –§–ª–∞–≥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–Ω–æ–ø–∫–∏-–æ–≤–µ—Ä–ª–µ—è
let scale = 100; // –¢–µ–∫—É—â–∏–π –º–∞—Å—à—Ç–∞–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
let touchStartTime; // –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∫–∞—Å–∞–Ω–∏—è
let activeTouchId = null; // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–∞—Å–∞–Ω–∏—è
let increment = 0; // –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏–π –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
const fontSize = 120; // –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ —Å–∏–º–≤–æ–ª–æ–≤
const decrementInterval = 3000; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞

const targetArray = ['t', 'h', 'i', 'n', 'k']; // –¶–µ–ª–µ–≤–æ–π –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –∏–≥—Ä—ã
let currentIndex = 0; // –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ —Å–∏–º–≤–æ–ª–∞ –≤ —Ü–µ–ª–µ–≤–æ–º –º–∞—Å—Å–∏–≤–µ

const decrementAmount = 1; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–º–µ–Ω—å—à–µ–Ω–∏—è –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞ –∑–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª
const shortTouchDuration = 500; // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –∫–∞—Å–∞–Ω–∏—è
const shortVibrationDuration = 10; // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –≤–∏–±—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞
const longVibrationDuration = 30; // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª–∏–Ω–Ω–æ–≥–æ –≤–∏–±—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞
const symbolFontSize = '60px'; // –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ —Å–∏–º–≤–æ–ª–æ–≤ —Ç–∏–ø–∞ cupcake –∏ lollipop
const maxIncrement = 100; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞

const wideButtonFillGradient = 'linear-gradient(to right, rgba(255, 182, 193, 0) 0%, white 0%, white 100%)'; // –ì—Ä–∞–¥–∏–µ–Ω—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∏—Ä–æ–∫–æ–π –∫–Ω–æ–ø–∫–∏
const morseBarDisplayDuration = 3000; // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–∞ –≤ –ø–æ–ª–æ—Å–µ –ú–æ—Ä–∑–µ
const characterDisplayDuration = 2500; // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–∞ –≤ —ç–ª–µ–º–µ–Ω—Ç–µ character
const morseInputTimeoutDuration = 2000; // –¢–∞–π–º–∞—É—Ç –¥–ª—è –≤–≤–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞ –≤ –∞–∑–±—É–∫–µ –ú–æ—Ä–∑–µ
const fadeOutDuration = 1000; // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
const fadeInClass = 'fade-in'; // –ö–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
const fadeOutClass = 'fade-out'; // –ö–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞

// –°–∏–º–≤–æ–ª—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–∏–º–≤–æ–ª–æ–≤ –∏ –∞–∑–±—É–∫–∏ –ú–æ—Ä–∑–µ
const poopSymbol = 'üí©';
const cupcakeSymbol = 'üßÅ';
const lollipopSymbol = 'üç≠';
const dotSymbol = '.';
const dashSymbol = '-';

// –ê–∑–±—É–∫–∞ –ú–æ—Ä–∑–µ: —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π –∏ –±—É–∫–≤
const morseAlphabet = {
    '.-': 'A', '-...': 'B', '-.-.': 'C', '-..': 'D', '.': 'E',
    '..-.': 'F', '--.': 'G', '....': 'H', '..': 'I', '.---': 'J',
    '-.-': 'K', '.-..': 'L', '--': 'M', '-.': 'N', '---': 'O',
    '.--.': 'P', '--.-': 'Q', '.-.': 'R', '...': 'S', '-': 'T',
    '..-': 'U', '...-': 'V', '.--': 'W', '-..-': 'X', '-.--': 'Y',
    '--..': 'Z', '.----': '1', '..---': '2', '...--': '3', '....-': '4',
    '.....': '5', '-....': '6', '--...': '7', '---..': '8', '----.': '9',
    '-----': '0'
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞
updateIncrementDisplay();

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É-–æ–≤–µ—Ä–ª–µ–π
buttonOverlay.addEventListener("click", function () {
    isButtonOverlayActive = !isButtonOverlayActive;

    // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–Ω–æ–ø–∫–∏-–æ–≤–µ—Ä–ª–µ—è
    if (isButtonOverlayActive) {
        buttonOverlay.classList.add("pulsing");
        buttonOverlay.style.opacity = 0.9;
        buttonPanel.classList.add('button-panel-hidden');
        buttonPanelTop.classList.add('button-panel-hidden');
    } else {
        buttonOverlay.classList.remove("pulsing");
        buttonOverlay.style.opacity = 1;
        buttonPanel.classList.remove('button-panel-hidden');
        buttonPanelTop.classList.remove('button-panel-hidden');
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–∑–±—É–∫–∏ –ú–æ—Ä–∑–µ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–º–≤–æ–ª–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏
    if (isButtonOverlayActive) {
        handleMorseInput(0);
    } else {
        checkCharacter();
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∏—Ä–æ–∫–æ–π –∫–Ω–æ–ø–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
function fillWideButton(percent) {
    fillPercentage = `${percent}%`;
    wideButton.style.setProperty('--fill-width', fillPercentage);
    wideButton.style.background = wideButtonFillGradient.replace(/0%/g, fillPercentage);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞
function updateIncrementDisplay() {
    incrementDisplay.textContent = `${increment}%`;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function decreaseImageSize() {
    scale -= 2;
    image.style.transform = `scale(${scale / 100})`;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ä–∞–∑–º–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function resetImageSize() {
    scale = 100;
    image.style.transform = `scale(${scale / 100})`;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –¥–ª—è –∫–∞—Å–∞–Ω–∏–π
image.addEventListener('touchstart', (event) => {
    if (activeTouchId !== null || event.touches.length > 1) {
        return;
    }

    activeTouchId = event.changedTouches[0].identifier;
    touchStartTime = new Date().getTime();
    decreaseImageSize();

    if (navigator.vibrate) {
        navigator.vibrate(shortVibrationDuration);
    }

    event.preventDefault();
});

image.addEventListener('touchend', (event) => {
    if (activeTouchId === null) {
        return;
    }

    const touch = Array.from(event.changedTouches).find(t => t.identifier === activeTouchId);
    if (!touch) {
        return;
    }

    const touchEndTime = new Date().getTime();
    const touchDuration = touchEndTime - touchStartTime;
    const touchPositionX = touch.clientX;
    const touchPositionY = touch.clientY;

    let symbol, symbolClass;

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ –∏ –µ–≥–æ –∫–ª–∞—Å—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–Ω–æ–ø–∫–∏-–æ–≤–µ—Ä–ª–µ—è
    if (isButtonOverlayActive) {
        symbol = touchDuration >= shortTouchDuration ? dashSymbol : dotSymbol;
        symbolClass = 'symbol';
    } else {
        symbol = touchDuration >= shortTouchDuration ? cupcakeSymbol : lollipopSymbol;
        symbolClass = 'symbol-eat';
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
    createFloatingSymbol(touchPositionX, touchPositionY, symbol, symbolClass);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞ –∏–ª–∏ –∞–∑–±—É–∫–∏ –ú–æ—Ä–∑–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏-–æ–≤–µ—Ä–ª–µ—è
    if (!isButtonOverlayActive) {
        increment += touchDuration >= shortTouchDuration ? 4 : 1;
        increment = Math.min(increment, maxIncrement);

        updateIncrementDisplay();
        fillWideButton(increment);
    } else {
        handleMorseInput(touchDuration);
    }

    resetImageSize();
    activeTouchId = null;

    event.preventDefault();
});

image.addEventListener('touchcancel', (event) => {
    resetImageSize();
    activeTouchId = null;
});

image.addEventListener('contextmenu', (event) => {
    event.preventDefault();
});

// –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
function createFloatingSymbol(x, y, symbol, symbolClass) {
  const symbolElement = document.createElement('div');
  symbolElement.textContent = symbol;
  symbolElement.className = symbolClass || 'symbol';
  symbolElement.style.left = `${x}px`;
  symbolElement.style.top = `${y}px`;

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–∏–º–≤–æ–ª–∞
  if (symbol === cupcakeSymbol || symbol === lollipopSymbol) {
      symbolElement.style.fontSize = symbolFontSize;
  } else {
      symbolElement.style.fontSize = `${fontSize}px`;
  }

  symbolElement.style.pointerEvents = 'none';
  document.body.appendChild(symbolElement);

  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–º–µ—â–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏ –µ–≥–æ –∞–Ω–∏–º–∞—Ü–∏—é
  const overlayTop = overlayArea.getBoundingClientRect().top;
  const translateY = y - overlayTop + (symbol === cupcakeSymbol || symbol === lollipopSymbol ? parseInt(symbolFontSize) / 2 : fontSize / 2);

  requestAnimationFrame(() => {
      symbolElement.style.transform = `translateY(-${translateY}px)`;
      symbolElement.style.opacity = 0;
  });

  // –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
  setTimeout(() => {
      symbolElement.remove();
  }, 2000);
}

let morseInput = '';
let morseTimeout;

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∞–∑–±—É–∫–∏ –ú–æ—Ä–∑–µ
function handleMorseInput(duration) {
  clearTimeout(morseTimeout);

  morseInput = ''; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—É—é –∞–∑–±—É–∫—É –ú–æ—Ä–∑–µ

  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ—á–∫—É –∏–ª–∏ —Ç–∏—Ä–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–∞—Å–∞–Ω–∏—è
  morseInput += duration >= shortTouchDuration ? dashSymbol : dotSymbol;

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏–º–≤–æ–ª–∞
  morseTimeout = setTimeout(() => {
      const letter = decodeMorse(morseInput);
      updateMorseBar(letter);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–º–≤–æ–ª –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω
      setTimeout(() => {
          checkCharacter(letter);
      }, characterDisplayDuration);

      morseInput = ''; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—É—é –∞–∑–±—É–∫—É –ú–æ—Ä–∑–µ
  }, morseInputTimeoutDuration);
}

// –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∑–±—É–∫–∏ –ú–æ—Ä–∑–µ –≤ —Å–∏–º–≤–æ–ª
function decodeMorse(sequence) {
  return morseAlphabet[sequence] || poopSymbol; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–∏–º–≤–æ–ª –∏–ª–∏ –∑–Ω–∞—á–æ–∫ "üí©" –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–∏–º–≤–æ–ª–∞ –∏ –µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
function checkCharacter(letter = '') {
  if (letter.toLowerCase() === targetArray[currentIndex]) {
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–∏–º–≤–æ–ª –Ω–∞ —ç–∫—Ä–∞–Ω
      const characterDiv = document.createElement('div');
      characterDiv.classList.add('character', fadeInClass);
      characterDiv.textContent = letter;
      buttonOverlay.appendChild(characterDiv);

      currentIndex++; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–∏–º–≤–æ–ª—É

      if (currentIndex === targetArray.length) {
          handleGameEnd(); // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã
      }
  } else {
      // –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å
      const existingCharacters = document.querySelectorAll('.character');
      existingCharacters.forEach(elem => {
          elem.classList.add(fadeOutClass);
          setTimeout(() => {
              elem.remove();
          }, fadeOutDuration);
      });
      currentIndex = 0;
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
function handleGameEnd() {
  buttonOverlay.classList.add('game-over-animation'); // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã

  // –û—á–∏—â–∞–µ–º —ç–∫—Ä–∞–Ω –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è
  setTimeout(() => {
      buttonOverlay.innerHTML = '';
      isButtonOverlayActive = false;
      buttonOverlay.classList.remove('pulsing', 'game-over-animation');
      buttonOverlay.style.opacity = 1;
      buttonPanel.classList.remove('button-panel-hidden');
      buttonPanelTop.classList.remove('button-panel-hidden');
  }, 2000);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–æ—Å—ã –ú–æ—Ä–∑–µ
function updateMorseBar(letter) {
  morseBar.textContent = letter; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏–º–≤–æ–ª –≤ –ø–æ–ª–æ—Å—É –ú–æ—Ä–∑–µ
  morseBar.style.opacity = 1; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–æ—Å—É –ú–æ—Ä–∑–µ

  // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª–æ—Å—É –ú–æ—Ä–∑–µ –ø–æ—Å–ª–µ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
  setTimeout(() => {
      morseBar.textContent = '';
      morseBar.style.opacity = 0;
  }, morseBarDisplayDuration);
}

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ —É–º–µ–Ω—å—à–µ–Ω–∏–µ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞
setInterval(() => {
  if (increment > 0) {
      increment -= decrementAmount;
      updateIncrementDisplay();
      fillWideButton(increment);
  }
}, decrementInterval);
