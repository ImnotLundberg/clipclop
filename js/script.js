document.addEventListener('DOMContentLoaded', function () {
    // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã DOM
    const buttonOverlay = document.getElementById("button-overlay-area");
    const image = document.querySelector('#game-area img');
    const overlayArea = document.getElementById('overlay-area');
    const wideButton = document.querySelector('.wide-button');
    const incrementDisplay = document.getElementById('increment-display');

    // –ù–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    let isPulsing = false;
    let scale = 100;
    let touchStartTime;
    let activeTouchId = null;
    let increment = 0;
    const fontSize = 120; // –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –æ–≤–µ—Ä–ª–µ–π–Ω–æ–π –∫–Ω–æ–ø–∫–µ
    buttonOverlay.addEventListener("click", function() {
        isPulsing = !isPulsing;

        if (isPulsing) {
            buttonOverlay.classList.add("pulsing");
            buttonOverlay.style.opacity = 0.9; // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
        } else {
            buttonOverlay.classList.remove("pulsing");
            buttonOverlay.style.opacity = 1; // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏
        }
    });

    // –£–º–µ–Ω—å—à–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ –∫–∞—Å–∞–Ω–∏–∏
    function decreaseImageSize() {
        scale -= 2;
        image.style.transform = `scale(${scale / 100})`;
    }

    // –°–±—Ä–æ—Å —Ä–∞–∑–º–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    function resetImageSize() {
        scale = 100;
        image.style.transform = `scale(${scale / 100})`;
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª–∞ –∫–∞—Å–∞–Ω–∏—è –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
    image.addEventListener('touchstart', (event) => {
        if (activeTouchId !== null || event.touches.length > 1) {
            return;
        }

        activeTouchId = event.changedTouches[0].identifier;
        touchStartTime = new Date().getTime();
        decreaseImageSize();
        event.preventDefault();
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫–∞—Å–∞–Ω–∏—è –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
    image.addEventListener('touchend', (event) => {
        const touch = Array.from(event.changedTouches).find(t => t.identifier === activeTouchId);
        if (!touch) {
            return;
        }

        const touchEndTime = new Date().getTime();
        const touchDuration = touchEndTime - touchStartTime;
        const touchPositionX = touch.clientX;
        const touchPositionY = touch.clientY;

        let symbol, symbolClass;

        // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ –∏ –µ–≥–æ –∫–ª–∞—Å—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è pulsing
        if (isPulsing) {
            symbol = touchDuration >= 500 ? '-' : '.';
            symbolClass = 'symbol';
        } else {
            symbol = touchDuration >= 500 ? 'üßÅ' : 'üç≠';
            symbolClass = 'symbol-eat'; // –û–±—â–∏–π –∫–ª–∞—Å—Å –¥–ª—è –∫–µ–∫—Å–∞ –∏ –ª–µ–¥–µ–Ω—Ü–∞
        }

        // –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–≤–∞—é—â–µ–≥–æ —Å–∏–º–≤–æ–ª–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        createFloatingSymbol(touchPositionX, touchPositionY, symbol, symbolClass);

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if (!isPulsing) {
            if (touchDuration >= 500) {
                increment += 4;
            } else {
                increment += 1;
            }

            if (increment > 100) {
                increment = 100;
            }

            updateIncrementDisplay();
            fillWideButton(increment);
        }

        resetImageSize();
        activeTouchId = null;
        event.preventDefault();
    });

    // –°–±—Ä–æ—Å —Ä–∞–∑–º–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∫–∞—Å–∞–Ω–∏—è
    image.addEventListener('touchcancel', (event) => {
        resetImageSize();
        activeTouchId = null;
    });

    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –ø—Ä–∏ –¥–æ–ª–≥–æ–º –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
    image.addEventListener('contextmenu', (event) => {
        event.preventDefault();
    });

    // –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–≤–∞—é—â–µ–≥–æ —Å–∏–º–≤–æ–ª–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
    function createFloatingSymbol(x, y, symbol, symbolClass) {
        const symbolElement = document.createElement('div');
        symbolElement.textContent = symbol;
        symbolElement.className = symbolClass || 'symbol';
        symbolElement.style.left = `${x}px`;
        symbolElement.style.top = `${y}px`;

        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–∏–º–≤–æ–ª–æ–≤ "üßÅ" –∏ "üç≠"
        if (symbol === 'üßÅ' || symbol === 'üç≠') {
            symbolElement.style.fontSize = '60px';
        } else {
            // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
            symbolElement.style.fontSize = `${fontSize}px`;
        }

        symbolElement.style.pointerEvents = 'none'; // –ò—Å–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ —Å–æ–±—ã—Ç–∏–π –∫–ª–∏–∫–∞

        document.body.appendChild(symbolElement);

        const overlayTop = overlayArea.getBoundingClientRect().top;
        const translateY = y - overlayTop + (symbol === 'üßÅ' || symbol === 'üç≠' ? 30 / 2 : fontSize / 2); // –£—á–µ—Ç —Ä–∞–∑–º–µ—Ä–∞

        requestAnimationFrame(() => {
            symbolElement.style.transform = `translateY(-${translateY}px)`;
            symbolElement.style.opacity = 0;
        });

        setTimeout(() => {
            symbolElement.remove();
        }, 2000); // –£–¥–∞–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    }

    // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∏—Ä–æ–∫–æ–π –∫–Ω–æ–ø–∫–∏
    function fillWideButton(percent) {
        wideButton.style.setProperty('--fill-width', `${percent}%`);
        wideButton.style.background = `
            linear-gradient(to right,
                rgba(255, 182, 193, 0) ${percent}%,
                white ${percent}%,
                white 100%
            )`;
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞
    function updateIncrementDisplay() {
        incrementDisplay.textContent = `${increment}%`;
    }
});
